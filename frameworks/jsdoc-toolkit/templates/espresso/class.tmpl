{!
  function htmlize(block) {
    return markdown(block);
  }
!}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset={+IO.encoding+}" />
  <meta name="generator" content="JsDoc Toolkit" />

	<title>JsDoc Reference - {+data.alias+}</title>
	{! Link.base = "../"; /* all generated links will be relative to this */ !}
  <link rel="stylesheet" type="text/css" href="../static/default.css"></link>
  <link rel="stylesheet" type="text/css" href="../static/doc.css"></link>
  <script type="text/javascript" src="../../bin/espresso.js"></script>
</head>

<body class="doc">
  {+include("static/header.html")+}
  <div id="module">
		<h1>
				{!
					var classType = "";
					
					if (data.isBuiltin()) {
						classType += "Built-In ";
					}
					
					if (data.isNamespace) {
						if (data.is('FUNCTION')) {
							classType += "Function ";
						}
						classType += "Namespace ";
					}
					else {
						classType += "Class ";
					}
			!}
		  {+classType+}{+data.alias+}
    </h1>
    <if test="!data.isBuiltin()">{# isn't defined in any file #}
      <span class="src">{+new Link().toSrc(data.srcFile)+}</span>
    </if>
  </div>
	<div id="index">
		{+publish.classesIndex+}
	</div>
  <div id="content">

<!-- ============================== class summary ========================== -->
    <if test="data.classDesc.length || data.augments.length">
      <h1 class="title">Overview</h1>
      <if test="data.classDesc.length">
			<p class="description">
				{+htmlize(resolveLinks(data.classDesc))+}
			</p>
      </if>
      <if test="data.augments.length">
				<dl class="detailList">
				<dt class="heading">Extends:</dt>
				<for each="item" in="data.augments">
				<dt>{+ new Link().toSymbol(item) +}</dt>
				</for>
				</dl>
      </if>
			<if test="data.see.length">
				<dl class="detailList">
				<dt class="heading">See:</dt>
				<for each="item" in="data.see">
				<dt>{+ new Link().toSymbol(item) +}</dt>
				</for>
				</dl>
			</if>
      <if test="data.requires.length">
        <dl class="detailList">
				<dt class="heading">Requires:</dt>
				<for each="item" in="data.requires">
				<dt>{+resolveLinks(item)+}</dt>
				</for>
				</dl>
			</if>
			<if test="data.params.length">
				<dl class="detailList">
				<dt class="heading">Parameters:</dt>
				<for each="item" in="data.params">
					<dt>
						{+((item.type)?"<span class=\"light fixedFont\">("+(new Link().toSymbol(item.type))+")</span> " : "")+}<b>{+item.name+}</b>
						<if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
					</dt>
					<dd>{+htmlize(resolveLinks(item.desc))+}</dd>
				</for>
				</dl>
			</if>
			<if test="data.example.length">
			<for each="example" in="data.example">
		  {+code(example)+}
			</for>
			</if>
			<if test="data.version.length">
				<dl class="detailList">
				<dt class="heading">Version:</dt>
				<dt>{+data.version+}</dt>
				</dl>
			</if>
    </if>


<!-- ============================== constructor summary ====================
			<if test="!data.isBuiltin() && (data.isNamespace || data.is('CONSTRUCTOR'))">
			<table class="summaryTable" cellspacing="0" summary="A summary of the constructor documented in the class {+data.alias+}.">
				<caption>{+classType+}Summary</caption>
				<thead>
					<tr>
						<th scope="col">Constructor Attributes</th>
						<th scope="col">Constructor Name and Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="attributes">{!
							if (data.isPrivate) output += "&lt;private&gt; ";
							if (data.isInner) output += "&lt;inner&gt; ";
						!}&nbsp;</td>
						<td class="nameDescription" {!if (data.comment.getTag("hilited").length){output += 'style="color: red"'}!}>
							<div class="fixedFont">
								<b>{+ new Link().toSymbol(data.alias).inner('constructor')+}</b><if test="classType != 'Namespace '">{+ makeSignature(data.params) +}</if>
							</div>
							<div class="description">{+resolveLinks(summarize(data.desc))+}</div>
						</td>
					</tr>
				</tbody>
			</table>
			</if>-->

<!-- ============================== properties summary ===================== -->
			<if test="data.properties.length">
				{! var ownProperties = data.properties.filter(function($){return $.memberOf == data.alias && !$.isNamespace}).sort(makeSortby("name"));
					 var borrowedMembers = data.properties.filter(function($) {return $.memberOf != data.alias});
          !}
        <if test="ownProperties.length || borrowedMembers.length">
          <h1 class="title">Field Summary</h1>
        </if>
				<if test="ownProperties.length">
          <table>
					<for each="member" in="ownProperties">
						<tr class="nameDescription">
              <td class="fixedFont right">+</td>
              <td class="fixedFont">
                {+new Link().toSymbol(member.alias).withText(member.name)+}
              </td>
            </tr>
					</for>
          </table>
				</if>
				
				<if test="data.inheritsFrom.length">
				<dl class="inheritsList">
				{!
					var contributers = [];
					borrowedMembers.map(function($) {if (contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf)});
					for (var i = 0, l = contributers.length; i < l; i++) {
						output +=
							"<dt>Fields borrowed from class "+new Link().toSymbol(contributers[i])+": </dt>"
							+
							"<dd>" +
							borrowedMembers
							.filter(
								function($) { return $.memberOf == contributers[i] }
							)
							.sort(makeSortby("name"))
							.map(
								function($) { return new Link().toSymbol($.alias).withText($.name) }
							)
							.join(", ")
							+
							"</dd>";
					}
				!}
				</dl>
				</if>
			</if>

<!-- ============================== methods summary ======================== -->
			<if test="data.methods.length">
				{! var ownMethods = data.methods.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name"));
					 var borrowedMembers = data.methods.filter(function($) {return $.memberOf != data.alias});
          !}
				<if test="ownMethods.length || borrowedMembers.length">
        <h1 class="title">Method Summary</h1>
        </if>
				<if test="ownMethods.length">
          <table>
					<for each="member" in="ownMethods">
						<tr class="nameDescription">
              <td><span class="fixedFont">
              + <b>{+new Link().toSymbol(member.alias).withText(member.name)+}</b>{+makeSignature(member.params)+}</td>
            </tr>
					</for>
          </table>
				</if>
				
				<if test="data.inheritsFrom.length">
				<dl class="inheritsList">
				{!
					var contributers = [];
					borrowedMembers.map(function($) {if (contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf)});
					for (var i = 0, l = contributers.length; i < l; i++) {
						output +=
							"<dt>Methods borrowed from class "+new Link().toSymbol(contributers[i])+": </dt>"
							+
							"<dd>" +
							borrowedMembers
							.filter(
								function($) { return $.memberOf == contributers[i] }
							)
							.sort(makeSortby("name"))
							.map(
								function($) { return new Link().toSymbol($.alias).withText($.name) }
							)
							.join(", ")
							+
							"</dd>";
					}
				
				!}
				</dl>
				</if>
			</if>
<!-- ============================== events summary ======================== -->
			<if test="data.events.length">
				{! var ownEvents = data.events.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name"));
           var borrowedMembers = data.events.filter(function($) {return $.memberOf != data.alias});
        !}
				<if test="ownEvents.length || borrowedMembers.length">
        <h1 class="title">Event Summary</h2>
        </if>
				<if test="ownEvents.length">
          <table>
					<for each="member" in="ownEvents">
						<tr class="nameDescription">
              <td><span class="fixedFont">
              + <b>{+new Link().toSymbol(member.alias).withText(member.name)+}</b>{+makeSignature(member.params)+}</td>
            </tr>
					</for>
          </table>
				</if>
				
				<if test="data.inheritsFrom.length">
				<dl class="inheritsList">
				{!
					var contributers = [];
					borrowedMembers.map(function($) {if (contributers.indexOf($.memberOf) < 0) contributers.push($.memberOf)});
					for (var i = 0, l = contributers.length; i < l; i++) {
						output +=
							"<dt>Events borrowed from class "+new Link().toSymbol(contributers[i])+": </dt>"
							+
							"<dd>" +
							borrowedMembers
							.filter(
								function($) { return $.memberOf == contributers[i] }
							)
							.sort(makeSortby("name"))
							.map(
								function($) { return new Link().toSymbol($.alias).withText($.name) }
							)
							.join(", ")
							+
							"</dd>";
					}
				
				!}
				</dl>
				</if>
			</if>

<!-- ============================== field details ========================== -->		
			<if test="defined(ownProperties) && ownProperties.length">
				<h1 class="title">Field Detail</h1>
				<for each="member" in="ownProperties">
          <div>
             <a name="{+Link.symbolNameToLinkName(member)+}"> </a>
             <h3><if test="member.type"><span class="light">({+new Link().toSymbol(member.type)+})</span></if> <if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if><b>{+member.name+}</b></h3>
					</div>
					<div class="description">
						{+htmlize(resolveLinks(member.desc))+}
					</div>
					
					<if test="member.example.length">
					<for each="example" in="member.example">
          {+code(example)+}
					</for>
					</if>

						<if test="member.deprecated">
							<dl class="detailList">
							<dt class="heading">Deprecated:</dt>
							<dt>
								{+ member.deprecated +}
							</dt>
							</dl>
						</if>
						<if test="member.since">
							<dl class="detailList">
							<dt class="heading">Since:</dt>
								<dt>{+ member.since +}</dt>
							</dl>
						</if>
						<if test="member.see.length">
							<dl class="detailList">
							<dt class="heading">See:</dt>
							<for each="item" in="member.see">
							<dt>{+ new Link().toSymbol(item) +}</dt>
							</for>
							</dl>
						</if>
						<if test="member.defaultValue">
							<dl class="detailList">
							<dt class="heading">Default Value:</dt>
							<dt>
								{+resolveLinks(member.defaultValue)+}
							</dt>
							</dl>
						</if>

						<if test="member.srcFile != data.srcFile">
							<br />
							<i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
						</if>
						<if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>


					<if test="!$member_last"><hr /></if>
				</for>
			</if>

<!-- ============================== method details ========================= -->		
			<if test="defined(ownMethods) && ownMethods.length">
				<h1 class="title">Method Detail</h1>
				<for each="member" in="ownMethods">
					<a name="{+Link.symbolNameToLinkName(member)+}"> </a>
          <div>
             <a name="{+Link.symbolNameToLinkName(member)+}"> </a>
             <h3><if test="member.type"><span class="light">({+new Link().toSymbol(member.type)+})</span></if> <if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if><b>{+member.name+}</b>{+makeSignature(member.params)+}</h3>

             <div class="description">
               <if test="member.desc">
  				       <dt>{+htmlize(resolveLinks(member.desc))+}</dd>
               </if>
						   <if test="member.author"><br/>
                 <i>Author: </i>{+member.author+}.
               </if>
             </div>

						<if test="member.params.length">
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							<for each="item" in="member.params">
								<dt>
									{+((item.type)?"<span class=\"light fixedFont\">("+(new Link().toSymbol(item.type))+")</span> " : "")+}<b>{+item.name+}</b>
									<if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
								</dt>
								<dd>{+resolveLinks(item.desc)+}</dd>
							</for>
							</dl>
						</if>
						<if test="member.deprecated">
							<dl class="detailList">
							<dt class="heading">Deprecated:</dt>
							<dt>
								{+member.deprecated+}
							</dt>
							</dl>
						</if>
						<if test="member.since">
							<dl class="detailList">
							<dt class="heading">Since:</dt>
								<dt>{+ member.since +}</dd>
							</dl>
							</dl>
						</if>
						<if test="member.exceptions.length">
							<dl class="detailList">
							<dt class="heading">Throws:</dt>
							<for each="item" in="member.exceptions">
								<dt>
									{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
								</dt>
								<dd>{+resolveLinks(item.desc)+}</dd>
							</for>
							</dl>
						</if>
						<if test="member.returns.length">
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							<for each="item" in="member.returns">
								<dt>{+((item.type)?"<span class=\"light fixedFont\">("+(new Link().toSymbol(item.type))+")</span> " : "")+}{+resolveLinks(item.desc)+}</dt>
							</for>
							</dl>
						</if>
						<if test="member.requires.length">
							<dl class="detailList">
							<dt class="heading">Requires:</dt>
							<for each="item" in="member.requires">
								<dt>{+ resolveLinks(item) +}</dt>
							</for>
							</dl>
						</if>

						<if test="member.see.length">
							<dl class="detailList">
							<dt class="heading">See:</dt>
							<for each="item" in="member.see">
								<dt>{+ new Link().toSymbol(item) +}</dt>
							</for>
							</dl>
						</if>
					

					</div>
					<if test="member.example.length">
					<for each="example" in="member.example">
					{+code(example)+}
					</for>
					</if>
				 <if test="member.srcFile != data.srcFile">
					   <br />
					   <i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
				 </if>
					
					<if test="!$member_last"><hr /></if>
				</for>
			</if>
			
<!-- ============================== event details ========================= -->		
			<if test="defined(ownEvents) && ownEvents.length">
				<h1 class="title">Event Detail</h1>
				<for each="member" in="ownEvents">
					<a name="{+Link.symbolNameToLinkName(member)+}"> </a>
          <div>
             <a name="{+Link.symbolNameToLinkName(member)+}"> </a>
             <h3><if test="member.type"><span class="light">({+new Link().toSymbol(member.type)+})</span></if> <if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if><b>{+member.name+}</b>{+makeSignature(member.params)+}</h3>

						<if test="member.params.length">
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							<for each="item" in="member.params">
								<dt>
									{+((item.type)?"<span class=\"light fixedFont\">("+(new Link().toSymbol(item.type))+")</span> " : "")+}<b>{+item.name+}</b>
									<if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
								</dt>
								<dd>{+htmlize(resolveLinks(item.desc))+}</dd>
							</for>
							</dl>
						</if>
						<if test="member.deprecated">
							<dl class="detailList">
							<dt class="heading">Deprecated:</dt>
							<dt>
								{+member.deprecated+}
							</dt>
							</dl>
						</if>
						<if test="member.since">
							<dl class="detailList">
							<dt class="heading">Since:</dt>
								<dt>{+ member.since +}</dd>
							</dl>
							</dl>
						</if>
						<if test="member.exceptions.length">
							<dl class="detailList">
							<dt class="heading">Throws:</dt>
							<for each="item" in="member.exceptions">
								<dt>
									{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
								</dt>
								<dd>{+resolveLinks(item.desc)+}</dd>
							</for>
							</dl>
						</if>
						<if test="member.returns.length">
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							<for each="item" in="member.returns">
								<dt>{+((item.type)?"<span class=\"light fixedFont\">("+(new Link().toSymbol(item.type))+")</span> " : "")+}{+resolveLinks(item.desc)+}</dt>
							</for>
							</dl>
						</if>
						<if test="member.requires.length">
							<dl class="detailList">
							<dt class="heading">Requires:</dt>
							<for each="item" in="member.requires">
								<dt>{+ resolveLinks(item) +}</dt>
							</for>
							</dl>
						</if>
             <div class="description">
				     {+resolveLinks(member.desc)+}
						 <if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
             </div>

						<if test="member.see.length">
							<dl class="detailList">
							<dt class="heading">See:</dt>
							<for each="item" in="member.see">
								<dt>{+ new Link().toSymbol(item) +}</dt>
							</for>
							</dl>
						</if>
					

					</div>
					<if test="member.example.length">
					<for each="example" in="member.example">
					{+code(example)+}
					</for>
					</if>
				 <if test="member.srcFile != data.srcFile">
					   <br />
					   <i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
				 </if>
					
					<if test="!$member_last"><hr /></if>
				</for>
			</if>
			
			<hr />
		</div>

		
<!-- ============================== footer ================================= -->
		<div class="fineprint" style="clear:both">
			<if test="JSDOC.opt.D.copyright">&copy;{+JSDOC.opt.D.copyright+}<br /></if>
			Documentation generated by <a href="http://www.jsdoctoolkit.org/" target="_blank">JsDoc Toolkit</a> {+JSDOC.VERSION+} on {+new Date()+}
		</div>
	</body>
</html>
