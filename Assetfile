require "rake-pipeline-web-filters"
require "json"
require "uglifier"

class EspressoProductionFilter < Rake::Pipeline::Filter
  def generate_output(inputs, output)
    inputs.each do |input|
      result = File.read(input.fullpath)
      output.write result
    end
  end
end

class EspressoLicenseFilter < Rake::Pipeline::Filter
  def generate_output(inputs, output)
    license = File.read("generators/license.js")
    inputs.each do |input|
      file = File.read(input.fullpath)
      output.write "#{license}\n#{file}"
    end
  end
end


distros = {
  :crema => %w(espresso-crema),
  :shim  => %w(espresso-crema espresso-shim),
  :full  => %w(espresso-crema espresso-pubsub espresso-promise espresso-shim espresso-kvo espresso-fsm)
}

output "dist"

input "packages" do
  match "*/lib/**/*.js" do
    minispade :rewrite_requires => true,
              :string => true,
              :module_id_generator => proc { |input|
      id = input.path.dup
      id.sub!('/lib/', '/')
      id.sub!(/\.js$/, '')
      id.sub!(/\/main$/, '')
      id
    }

    concat "espresso-spade.js"
  end
end

input "packages" do
  match "*/lib/**/main.js" do
    neuter(
      :additional_dependencies => proc { |input|
        Dir.glob(File.join(File.dirname(input.fullpath),'**','*.js'))
      },
      :path_transform => proc { |path, input|
        package, path = path.split('/', 2)
        current_package = input.path.split('/', 2)[0]
        current_package == package && path ? File.join(package, "lib", "#{path}.js") : nil
      },
      :closure_wrap => true
    ) do |filename|
      File.join("modules/", filename.gsub('/lib/main.js', '.js'))
    end
  end
end

distros.each do |name, modules|
  name = "espresso" if name == :full

  input "dist/modules" do
    module_paths = modules.map{ |m| "#{m}.js" }
    match "{#{module_paths.join(',')}}" do
      concat(module_paths){ ["#{name}.js", "#{name}.prod.js"] }
    end

    # Strip dev code
    match "#{name}.prod.js" do
      filter(EspressoProductionFilter) { ["#{name}.prod.js", "#{name}.min.js"] }
    end

    # minify
    match "#{name}.min.js" do
      uglify{ "#{name}.min.js" }
      filter EspressoLicenseFilter
    end
  end
end
